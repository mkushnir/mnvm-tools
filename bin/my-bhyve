#!/bin/sh

var_required () {
    local _old_e
    _old_e=`set +o | grep errexit`
    set -e
    for i in "$@"
    do
        eval "test -n \"\$$i\"" || ( echo missing \$$i && false )
    done
    eval $_old_e
}


prog_required () {
    local _old_e
    _old_e=`set +o | grep errexit`
    set -e
    for i in "$@"
    do
        eval "/usr/bin/which \"$i\" >/dev/null 2>&1" || ( echo missing $i && false )
    done
    eval $_old_e
}


usage() {
    echo "`basename $0` [options]"
}


_abspath() {
    if echo $1 | grep -q '^/'
    then
        echo $1
    else
        echo "`pwd`/$1"
    fi
}


_do_it() {
    local _answer
    if /bin/test -z "$batch"
    then
        read -p "Running $* ... [yes/no/batch] " _answer
    else
        _answer=yes
    fi
    if test -n "$DEBUG"
    then
        logger "Running $@"
    fi
    case "${_answer}" in
        yes)
            if test -n "$dryrun"
            then
                echo "$@";
            else
                eval "$@";
            fi
        ;;
        batch)
            batch=1
            if test -n "$dryrun"
            then
                echo "$@";
            else
                eval "$@";
            fi
        ;;
        *)
            /bin/echo "skipped ..."
        ;;
    esac
}


#
# main
#
if test -n "$DEBUG"
then
    set -x
fi

batch=1
dryrun=

considx=1
cons_opt=

memsz=4G

mcpu=0
mcpu_opt=
pinnedcpu_opt=
basic_pci_opt=
net_opt=
disk_opt=
cdrom_opt=
install_opt_0=
install_opt_1=
install_opt_2=
install_opt_3=
installidx=0

load_disk=
passthrough_opt=
extra_opt=
grub_devmap=
grubdev=
grubdir=/boot/grub
grubconf=
nobhyveload=

busid=0
basic_pci_opt="-s ${busid}:0,hostbridge"
busid=$(( busid + 1 ))

args=`getopt Ab:Bc:C:d:D:E:g:G:hiI:K:l:L:m:M:nN:p:P:u: $*`
if test $? -ne 0
then
    exit 1
fi
set -- $args
while true
do
    case "$1" in
        -A)
            shift
            extra_opt="$extra_opt -A"
        ;;

        -b)
            shift
            d="`_abspath $1`"
            disk_opt="${disk_opt} -s ${busid}:0,virtio-blk,$d"
            busid=$(( busid + 1 ))
            if test -z "$load_disk"
            then
                load_disk="$d"
            fi
            shift
        ;;

        -B)
            shift
            nobhyveload=yes
        ;;

        -c)
            shift
            cons_opt="${cons_opt} -l com${considx},/dev/nmdm${1}A"
            considx=$(( $considx + 1 ))
            shift
        ;;

        -C)
            shift
            d="`_abspath $1`"
            cdrom_opt="-s ${busid}:0,ahci-cd,$d"
            busid=$(( busid + 1 ))
            if test -z "$load_disk"
            then
                load_disk="$d"
            fi
            shift
        ;;

        -d)
            shift
            d="`_abspath $1`"
            disk_opt="${disk_opt} -s ${busid}:0,ahci-hd,$d"
            busid=$(( busid + 1 ))
            if test -z "$load_disk"
            then
                load_disk="$d"
            fi
            shift
        ;;

        -D)
            shift
            grubdev=$1
            shift
        ;;

        -E)
            shift
            if echo $1 | grep -E -q '^[0-9]+:[0-9]+,'
            then
                extra_opt="$extra_opt -s $1"
            else
                extra_opt="$extra_opt -s ${busid}:0,$1"
                busid=$(( busid + 1 ))
            fi
            shift
        ;;

        -g)
            shift
            d="`_abspath $1`"
            grubdir=$d
            shift
        ;;

        -G)
            shift
            d="`_abspath $1`"
            grubconf=$d
            shift
        ;;

        -h)
            usage
            break
        ;;

        -i)
            shift
            batch=
        ;;

        -I)
            shift
            d="`_abspath $1`"
            if echo $grubdev | grep -q hd
            then
                eval "install_opt_${installidx}=\"-s ${busid}:0,ahci-hd,$d\""
                #install_opt="-s ${busid}:0,virtio-blk,$d"
                #install_opt="-s ${busid}:0,ahci-hd,$d"
            else
                eval "install_opt_${installidx}=\"-s ${busid}:0,ahci-cd,$d\""
                #install_opt="-s ${busid}:0,ahci-cd,$d"
            fi
            installidx=$(( $installidx + 1 ))
            busid=$(( busid + 1 ))
            load_disk="$d"
            shift
        ;;

        -K)
            shift
            net_opt="-s ${busid}:0,e1000,$1"
            busid=$(( busid + 1 ))
            shift
        ;;

        -l)
            shift
            extra_opt="$extra_opt -l $1"
            shift
        ;;

        -L)
            shift
            d="`_abspath $1`"
            grub_devmap=$d
            shift
        ;;

        -m)
            shift
            memsz=$1
            shift
        ;;

        -M)
            shift
            mcpu_opt=$1
            shift
        ;;

        -n)
            shift
            dryrun=1
        ;;

        -N)
            shift
            net_opt="-s ${busid}:0,virtio-net,$1"
            busid=$(( busid + 1 ))
            shift
        ;;

        -p)
            shift
            passthrough_opt="$passthrough_opt -s ${busid},passthru,$1"
            busid=$(( busid + 1 ))
            shift
        ;;

        -P)
            shift
            pinnedcpu_opt="$pinnedcpu_opt -p $1"
            mcpu=$(( mcpu + 1 ))
            shift
        ;;

        -u)
            shift
            busid=$1
            shift
        ;;

        --)
            shift
            break
        ;;

    esac
done

if test -n "$mcpu_opt" -a -n "$pinnedcpu_opt"
then
    echo "Cannot accept both -M and -P"
    exit 1
fi
mcpu=$mcpu_opt

name=$1

basic_pci_opt="$basic_pci_opt -s 31:0,lpc"

if test -z "$pinnedcpu_opt"
then
    if test "$mcpu" -eq 0
    then
        ncpu=`sysctl -n hw.ncpu`
        mcpu=4
        i=0
        j=$(( ncpu - mcpu ))
        while test $i -lt $mcpu
        do
            pinnedcpu_opt="$pinnedcpu_opt -p $i:$j"
            i=$(( i + 1 ))
            j=$(( j + 1 ))
        done
    fi
fi

prog_required bhyvectl bhyve

if test -n "$DEBUG"
then
    set -x
fi

installidx=0
while true
do
    _do_it "bhyvectl --vm=$name --destroy"

    if test -z "$grub_devmap"
    then
        if test -z "$nobhyveload"
        then
            var_required load_disk name
            _do_it "bhyveload -m $memsz -d $load_disk $name"
        fi
    else
        memsz=4096
        prog_required grub-bhyve
        if test -n "$grubconf" -a -f "$grubconf"
        then
            _do_it "cat $grubconf | grub-bhyve -r $grubdev -d $grubdir -m $grub_devmap -M $memsz $name"
        else
            _do_it "grub-bhyve -v -r $grubdev -d $grubdir -m $grub_devmap -M $memsz $name"
        fi
    fi
    if test $? -ne 0
    then
        echo "Failed to load $name"
        exit 1
    fi

    eval "install_opt=\$install_opt_${installidx}"

    _do_it "bhyve -H -P $pinnedcpu_opt \
        -c $mcpu \
        -m $memsz \
        $basic_pci_opt \
        $net_opt \
        $disk_opt \
        $cdrom_opt \
        $install_opt \
        $passthrough_opt \
        $cons_opt \
        $extra_opt \
        $name"

    _exitcode=$?
    echo -n "bhyve returned with $_exitcode: "
    if test $_exitcode -ne 0
    then
        echo "exiting ..."
        break
    else
        echo "re-starting ..."
        sleep 1
    fi
    installidx=$(( $installidx + 1 ))
done
